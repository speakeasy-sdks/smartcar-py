"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import header as shared_header
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from smartcar import utils
from typing import Any, Optional

class ResponseCode(str, Enum):
    TWO_HUNDRED = '200'
    FIVE_HUNDRED = '500'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Response:
    
    body: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('body'), 'exclude': lambda f: f is None }})
    code: Optional[ResponseCode] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    headers: Optional[list[shared_header.Header]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headers'), 'exclude': lambda f: f is None }})
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    